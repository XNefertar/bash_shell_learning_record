#!/bin/bash
# echo "This is an error message" >&2
# echo "This is a normal input" 

# exec 1> outtmp
# 
# echo "This is a test of redirecting all output"
# echo "from a script to another file."
# echo "without having to redirect every individual line"


# exec 2> errtmp
# # echo "This is the start of the script" >&2
# echo "This is the start of the script"
# echo "now redirecting all output to another location"
# exec 1> outtmp
# echo "This output should go to the testout file"
# echo "but this should go to the testerror file" >&2


# exec 0< log.txt
# 
# count=1
# while read line
# do
# 	echo "Line #$count: $line"
# 	count=$[ $count + 1 ]
# done


# exec 3> outtmp
# exec 3>> outtmp
# echo "This should display on the monitor"
# echo "and this should be stored in the file" >&3
# echo "Then this should be back on the monitor"


# exec 3>&1
# exec 1>outtmp 
# echo "This should store in the output file"
# echo "along with this line."
# exec 1>&3
# echo "Now things should be back to normal" 


# exec 6<&0
# exec 0<log.txt
# count=1
# while read line
# do
# 	echo "Line #$count: $line"
# 	count=$[ $count + 1 ]
# done
# exec 0<&6
# read -p "Are you done now?[Y/N]" answer
# case $answer in
# 	Y|y) echo "Goodbye";;
# 	N|n) echo "Sorry, this is the end.";;
# esac


# exec 3<> filetest
# read line <&3
# echo "Read: $line"
# echo "This is a test line" >&3

# exec 2> errtmp
# exec 3> outtmp
# echo "This is a test line of data" >&3
# exec 3>&-
# echo "This won't work" >&3


# exec 3> outtmp
# echo "This is a test line of data" >&3
# exec 3>&-
# cat outtmp
# exec 3> outtmp
# echo "This'll be bad" >&3


# tempfile=$(mktemp test19.XXXXXX)
# exec 3>$tempfile
# echo "This script writes to temp file $tempfile"
# echo "This is the first line" >&3
# echo "This is the second line." >&3
# echo "This is the last line." >&3
# exec 3>&-
# echo "Done creating temp file. The contents are:"
# cat $tempfile
# rm -f $tempfile 2> /dev/null


# tempfile=$(mktemp -t tmp.XXXXXX)
# echo "This is a test file." > $tempfile
# echo "This is the second line of the test." >> $tempfile
# echo "The temp file is located at: $tempfile"
# cat $tempfile
# rm -f $tempfile


# tempdir=$(mktemp -d dir.XXXXXX)
# cd $tempdir
# tempfile1=$(mktemp temp.XXXXXX)
# tempfile2=$(mktemp temp.XXXXXX)
# exec 7> $tempfile1
# exec 8> $tempfile2
# echo "Sending data to directory $tempdir"
# echo "This is a test line of data for $tempfile1" >&7
# echo "This is a test line of data for $tempfile2" >&8


# tempfile=outtmp
# echo "This is the start of the test" | tee $tempfile
# echo "This is the second line of the test" | tee -a $tempfile
# echo "This is the end of the test" | tee -a $tempfile


outfile='members.sql'
IFS=','
while read lname fname address city state zip
do
	cat >> $outfile << EOF
	INSERT INTO members (lname,fname,address,city,state,zip) VALUES
	('$lname', '$fname', '$address', '$city', '$state', '$zip');
EOF
done < ${1}

